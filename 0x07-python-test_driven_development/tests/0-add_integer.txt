======================
 DOCTEST FOR TASK 0
 =====================

=========================================================

>>> add_integer = __import__('0-add_integer').add_integer

=========================================================

====== EDGE CASES ======

>>> add_integer(1, 2)
3

>>> add_integer(9223372036854776003)
9223372036854776101

>>> add_integer(-9223372036854776003)
-9223372036854775905

>>> add_integer(9223372036854776003, -9223372036854776003)
0

>>> add_integer(3.1415161718192)
101

>>> add_integer(6.02214E23)
602213999999999969067106

>>> add_integer(float('inf'))
Traceback (most recent call last):
	    ...
OverflowError: cannot convert float infinity to integer

>>> add_integer(6.02214E-23)
98

>>> add_integer(--1)
99

>>> add_integer(98, --1)
99

>>> add_integer(--98++, --1++)
Traceback (most recent call last):
	    ...
SyntaxError: invalid syntax

>>> add_integer(98, --1++)
Traceback (most recent call last):
	    ...
SyntaxError: invalid syntax

>>> add_integer(5j)
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer(98, 5j)
Traceback (most recent call last):
	    ...
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer(98, None)
Traceback (most recent call last):
	    ...
TypeError: b must be an integer

>>> add_integer(None, None)
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
	    ...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer([1, 2])
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer(98, [3, 4])
Traceback (most recent call last):
	    ...
TypeError: b must be an integer

>>> add_integer([1, 2], [3, 4])
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer((1, 2))
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer(98, (3, 4))
Traceback (most recent call last):
	    ...
TypeError: b must be an integer

>>> add_integer((1, 2), (3, 4))
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer({'num1': 1, 'num2': 2})
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer(98, {'num3': 3, 'num4': 4})
Traceback (most recent call last):
	    ...
TypeError: b must be an integer

>>> add_integer({'num1': 1, 'num2': 2}, {'num3': 3, 'num4': 4})
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer({1, 2})
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer(98, {3, 4})
Traceback (most recent call last):
	    ...
TypeError: b must be an integer

>>> add_integer({1, 2}, {3, 4})
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer('a')
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer(98, 'b')
Traceback (most recent call last):
	    ...
TypeError: b must be an integer

>>> add_integer('a', 'b')
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer(x)
Traceback (most recent call last):
	    ...
NameError: name 'x' is not defined

>>> add_integer(98, y)
Traceback (most recent call last):
	    ...
NameError: name 'y' is not defined

>>> add_integer(x, y)
Traceback (most recent call last):
	    ...
NameError: name 'x' is not defined

>>> class x:
... 	  pass

>>> class y:
... 	  pass

>>> add_integer(x)
Traceback (most recent call last):
	    ...
TypeError: a must be an integer

>>> add_integer(98, y)
Traceback (most recent call last):
	    ...
TypeError: b must be an integer

>>> add_integer(x, y)
Traceback (most recent call last):
	    ...
TypeError: a must be an integer
